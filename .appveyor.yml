platform: x86

cache:
  - C:\protobuf-2.6.1 -> .appveyor.yml

init:
  - call "C:\Program Files (x86)\Microsoft Visual Studio 12.0\Common7\Tools\vsvars32.bat"

install:
  # Build libprotobuf, libprotoc and protoc.
  - >-
    if not exist C:\protobuf-2.6.1 (
      cd C:\
      curl -L -O https://github.com/google/protobuf/releases/download/v2.6.1/protobuf-2.6.1.zip
      7z x protobuf-2.6.1.zip
      cd protobuf-2.6.1\vsprojects
      devenv protobuf.sln /Upgrade
      msbuild protobuf.sln /t:libprotobuf;libprotoc;protoc /p:Configuration="Release" /p:Platform="Win32" /p:BuildProjectReferences=false
    )
  - set PROTOBUF_PREFIX=C:\protobuf-2.6.1

  # Get UPX executable packer
  - cd C:\
  - curl -L -O http://upx.sourceforge.net/download/upx391w.zip
  - 7z x upx391w.zip

  # Replace Qt ICU DLLs with minimal ones.
  - cd C:\Qt\5.5\msvc2013\bin
  - curl -L -O https://github.com/estan/minimal-icu/releases/download/minimal-icu-54.1/minimal-icu-54.1-msvc2013-x86.zip
  - 7z x minimal-icu-54.1-msvc2013-x86.zip -aoa

build_script:
  - set PATH=C:\Qt\5.5\msvc2013\bin;C:\upx391w;%PATH%
  - cd "%APPVEYOR_BUILD_FOLDER%"
  - qmake CONFIG-=debug
  - nmake zip

test_script:
  - set PATH=%PROTOBUF_PREFIX%\vsprojects\Release;C:\MinGW\msys\1.0\bin;%PATH%
  - cd "%APPVEYOR_BUILD_FOLDER%"/examples
  - nmake /F NMakefile clean
  - nmake /F NMakefile
  - test -s doc/example.html
  - test -s doc/example.md
  - test -s doc/example.docbook

artifacts:
  path: '*.zip'
  name: protoc-gen-doc-win32-zip

deploy:
  tag: $(appveyor_repo_tag_name)
  release: protoc-gen-doc $(appveyor_repo_tag_name)
  description: 'DRAFT'
  provider: GitHub
  auth_token:
    secure: JUtSd7iVOXwTUe295uQ0AL+qf3QVGwvz04eq4avhsLWorhdND+1tIXQuq99TnFd9
  artifact: protoc-gen-doc-win32-zip
  draft: true
  prerelease: false
  on:
    appveyor_repo_tag: true
